{"ast":null,"code":"var _jsxFileName = \"/Applications/robofriends-app/robofriends/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport './App.css';\n\nconst App = () => {\n  const [robots, setRobots] = useState();\n  const [searchfield, setSearchfield] = useState('');\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setRobots(users));\n  }, []);\n\n  const onSearchfield = e => {\n    setSearchfield(e.target.value);\n  };\n\n  const filteredRobots = () => {\n    if (!robots) return {};\n    if (searchfield.length === 0) return robots;\n    console.log(typeof robots);\n    return { ...robots\n    }.filter(robot => {\n      robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n  };\n\n  return !robots ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }\n  }, \"Loading\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"f1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"[Robo]-Friends\"), /*#__PURE__*/React.createElement(SearchBox, {\n    searchChanged: onSearchfield,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardList, {\n    robots: filteredRobots(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Applications/robofriends-app/robofriends/src/App.js"],"names":["React","useState","useEffect","CardList","SearchBox","App","robots","setRobots","searchfield","setSearchfield","fetch","then","response","json","users","onSearchfield","e","target","value","filteredRobots","length","console","log","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,EAApC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAIP,SAAS,CAACO,KAAD,CAF1B;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACzBP,IAAAA,cAAc,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAI,CAACb,MAAL,EAAa,OAAO,EAAP;AACb,QAAIE,WAAW,CAACY,MAAZ,KAAuB,CAA3B,EAA8B,OAAOd,MAAP;AAC9Be,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOhB,MAAnB;AACA,WAAO,EAAE,GAAGA;AAAL,MAAciB,MAAd,CAAqBC,KAAK,IAAI;AACnCA,MAAAA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCnB,WAAW,CAACkB,WAAZ,EAAlC;AACD,KAFM,CAAP;AAGD,GAPD;;AASA,SAAQ,CAACpB,MAAF,gBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ,gBACL;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,SAAD;AAAW,IAAA,aAAa,EAAGS,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAGI,cAAc,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA9BD;;AAgCA,eAAed,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport CardList from './CardList';\nimport SearchBox from './SearchBox'\nimport './App.css';\n\n\nconst App = () => {\n  const [robots, setRobots] = useState();\n  const [searchfield, setSearchfield] = useState('');\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => setRobots(users));\n  }, []);\n\n  const onSearchfield = e => {\n    setSearchfield(e.target.value);\n  };\n\n  const filteredRobots = () => {\n    if (!robots) return {};\n    if (searchfield.length === 0) return robots;\n    console.log(typeof(robots));\n    return { ...robots }.filter(robot => {\n      robot.name.toLowerCase().includes(searchfield.toLowerCase())\n    });\n  };\n\n  return (!robots) ? <h1>Loading</h1> : (\n    <div className='tc'>\n      <h1 className='f1'>[Robo]-Friends</h1>\n      <SearchBox searchChanged={ onSearchfield }></SearchBox>\n      <CardList robots={ filteredRobots() } />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}