{"ast":null,"code":"var _jsxFileName = \"/Applications/robofriends-app/robofriends/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox'; // import { robots as ROBOTS } from './robots';\n\nimport './App.css';\n\nconst App = () => {\n  const [robots, setRobots] = useState(ROBOTS);\n  const [searchfield, setSearchfield] = useState('');\n  useEffect(() => {\n    console.log('check');\n    getRobots();\n  }, []);\n\n  const onSearchfield = e => {\n    setSearchfield(e.target.value);\n    let r = e.target.value === '' ? ROBOTS : filteredRobots;\n    setRobots(r);\n  };\n\n  const filteredRobots = ROBOTS.filter(robot => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n\n  const getRobots = () => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setRobots({\n      robots: users\n    }));\n  };\n\n  return robots.length === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 34\n    }\n  }, \"Loading\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"f1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"[Robo]-Friends\"), /*#__PURE__*/React.createElement(SearchBox, {\n    searchChanged: onSearchfield,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardList, {\n    robots: robots,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Applications/robofriends-app/robofriends/src/App.js"],"names":["React","useState","useEffect","CardList","SearchBox","App","robots","setRobots","ROBOTS","searchfield","setSearchfield","console","log","getRobots","onSearchfield","e","target","value","r","filteredRobots","filter","robot","name","toLowerCase","includes","fetch","then","response","json","users","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAACO,MAAD,CAApC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,IAAAA,SAAS;AACV,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACzBL,IAAAA,cAAc,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACA,QAAIC,CAAC,GAAIH,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,EAApB,GAA0BT,MAA1B,GAAmCW,cAA3C;AACAZ,IAAAA,SAAS,CAACW,CAAD,CAAT;AACD,GAJD;;AAMA,QAAMC,cAAc,GAAGX,MAAM,CAACY,MAAP,CAAcC,KAAK,IAAI;AAC5C,WAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCf,WAAW,CAACc,WAAZ,EAAlC,CAAP;AACD,GAFsB,CAAvB;;AAIA,QAAMV,SAAS,GAAG,MAAM;AACtBY,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAItB,SAAS,CAAC;AAAED,MAAAA,MAAM,EAAEuB;AAAV,KAAD,CAF1B;AAGD,GAJD;;AAOA,SAAQvB,MAAM,CAACwB,MAAP,KAAkB,CAAnB,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAxB,gBACL;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,SAAD;AAAW,IAAA,aAAa,EAAGhB,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAGR,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAlCD;;AAoCA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport CardList from './CardList';\nimport SearchBox from './SearchBox'\n// import { robots as ROBOTS } from './robots';\nimport './App.css';\n\n\nconst App = () => {\n\n  const [robots, setRobots] = useState(ROBOTS);\n  const [searchfield, setSearchfield] = useState('');\n\n  useEffect(() => {\n    console.log('check');\n    getRobots();\n  }, []);\n\n  const onSearchfield = e => {\n    setSearchfield(e.target.value);\n    let r = (e.target.value === '') ? ROBOTS : filteredRobots;\n    setRobots(r);\n  };\n\n  const filteredRobots = ROBOTS.filter(robot => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n\n  const getRobots = () => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => setRobots({ robots: users }))\n  };\n\n\n  return (robots.length === 0) ? <h1>Loading</h1> : (\n    <div className='tc'>\n      <h1 className='f1'>[Robo]-Friends</h1>\n      <SearchBox searchChanged={ onSearchfield }></SearchBox>\n      <CardList robots={ robots } />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}